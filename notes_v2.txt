======================
Personal Notes
======================
Docs:
https://docs.nestjs.com/


To start the project in dev mode run:
yarn start:dev

=======================
Nest Js
=======================
Nest (NestJS) is a framework for building efficient, 
scalable Node.js server-side applications. 
It uses progressive JavaScript, is built with and fully supports 
TypeScript (yet still enables developers to code in pure JavaScript) 
and combines elements of OOP (Object Oriented Progamming), 
FP (Functional Programming), and 
FRP (Functional Reactive Programming).

=======================
Docker Database
=======================
> See Docker Compose

> Depedencies
yarn add -D prisma
yarn add @prisma/client

> Command
npx prisma init
npx prisma migrate dev --name <Name>
npx prisma studio

> Module
nest g module prisma
nest g service prisma --no-spec

> Scripts
"prisma:dev:deploy": "prisma migrate deploy",
"db:dev:rm": "docker-compose rm dev-db -s -f -v",
"db:dev:up": "docker-compose up -d dev-db",
"db:dev:restart": "yarn db:dev:rm && yarn db:dev:up && sleep 1 && yarn prisma:dev:deploy",

=======================
Pipes
=======================
> Depedencies
yarn add class-validator class-transformer

> Apply in DTO

> Don't Forget to apply the Pipe Globally, by adding this line on main.ts
  app.useGlobalPipes(new ValidationPipe({
    whitelist: true,
  }));

> Bug fixes from Auto Complete, please use this:
import { ValidationPipe } from '@nestjs/common';

=======================
Hashing
=======================
> For hashing password, we will use argon2

> Depedencies
yarn add argon2
